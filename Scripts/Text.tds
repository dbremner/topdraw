// Colored menubar
menubar.fillLayer(new Color);

// Fill with desktop with black
var db = desktop.bounds;
desktop.fillLayer(new Color("black"));

var symbols = new Array(	0xf8ff, // Apple
	0x21e5, // Tab forward
	0x21e4, // Tab back
	0x21ea, // Caps lock
	0x2325, // Optionâ€¨	0x2318, // Commad
	0x23ce, // Return
	0x232b, // Delete back
	0x2326, // Delete forward
	0x23cf, // Eject
	0x233d, // Power
	0x238b, // Power (alt)
	0x2603, // Snowman
	0x2615, // Hot beverage
	0x263a  // Smiley
);

var text = new Text("");
var xRnd = new Randomizer(0, db.width);
var yRnd = new Randomizer(0, db.height);
var sizeRnd = new Randomizer(32, 512);
var count = 15 * compositor.screenCount;
var symbolRnd = new Randomizer(0, symbols.length - 1);
var rotateRnd = new Randomizer(0, 2 * Math.PI);
var variation = 0.5;
var fontColor = new Color;
fontColor.a = 0.2;

// Draw 
for (var i = 0; i < count; ++i) {
	text.string = String.fromCharCode(symbols[symbolRnd.intValue]);
	text.foregroundColor = fontColor.vary(variation, variation, variation, 0);
	text.fontSize = sizeRnd.intValue;
	
	// Rotate randomly
	var pt = new Point(xRnd.intValue, yRnd.intValue);
	desktop.save();
	desktop.translate(pt.x, pt.y);
	desktop.rotate(rotateRnd.floatValue);
	desktop.translate(-pt.x, -pt.y);
	desktop.drawText(text, pt);
	desktop.restore();
}

// Apply a filter to make it more interesting
var f;
var filterRnd = new Randomizer;
if (filterRnd.booleanValue) {
	f = new Filter("CIGaussianBlur"); 
	f.setKeyValue("inputRadius", (2 + filterRnd.floatValue * 10));
} else {
	f = new Filter("CIMotionBlur"); 
	f.setKeyValue("inputRadius", 20);
	f.setKeyValue("inputAngle", Math.PI * (1 - filterRnd.floatValue * 2));
}

desktop.applyFilter(f);

