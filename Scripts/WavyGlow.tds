// Menubar and background
var grad = new Gradient(new Color("white"), new Color);
menubar.fillLayer(grad);

// Very dark color background corners
var bg = new Color("black");
var colors = new Array();
var vary = 0.3;
for (var i = 0; i < 4; ++i)
	colors.push(bg.vary(vary, vary, vary, 0));
	
desktop.coloredRect(desktop.bounds, colors[0], colors[1], colors[2], colors[3]);

// Draw lines
desktop.lineJoin = "round";
Lines();

// Add filter for some extra glow-i-ness
var bloom = new Filter("CIBloom");
bloom.setKeyValue("inputRadius", 80);
bloom.setKeyValue("inputIntensity", 2);

// Blur
var blur = new Filter("CIGaussianBlur");
bloom.inputFilter = blur;
desktop.applyFilter(bloom);

function Lines() {
	var db = desktop.bounds;
	var displacementRnd = new Randomizer(-200, 200);
	var gray = new Randomizer(0.1, 1);
	var smoothRnd = new Randomizer(0.4, 1);
	var height = db.height / 4;
	var start = new Point(db.x, db.y + 3 * height);
	var end = new Point(db.x + db.width, db.height * gray.floatValue);
	var lineWidthRnd = new Randomizer(5, 50);
	var count = 25;
	var heightOffset = 2 * height / count;
	var alpha = 0.3;
	
	for (x = 0; x < count; ++x) {
		desktop.beginPath();
		desktop.lineWidth = 5;
		
		// 1/2 lines gray, 1/2 colored
		if (x < (count / 2)) {
			desktop.strokeStyle = new Color(gray.floatValue, alpha);
		} else {
			var sc = new Color;
			sc.a = alpha;
			desktop.strokeStyle = sc;
		}

		desktop.moveTo(start);
		start.y -= heightOffset;
		
		// Move the end slightly
		var waveEnd = new Point(end.x, end.y + displacementRnd.floatValue);
		
		// end point, smoothness, displacement randomizer
		desktop.wavyLineTo(waveEnd, smoothRnd.floatValue, displacementRnd);
		desktop.lineWidth = lineWidthRnd.floatValue;
		desktop.stroke();
	}
}
