// Menubar gradient
menubar.fillLayer(new Gradient(new Color, new Color));

// Desktop gradient
var db = desktop.bounds;
var xRnd = new Randomizer(0, db.width);
var yRnd = new Randomizer(0, db.height);
var radiusRnd = new Randomizer(32, db.height/3);

// Draw background with black, and then vary alpha on rainbow gradient background
desktop.fillLayer(new Color("black"));
Rainbow();

// Draw "3D" spheres with light
var brightnessRnd = new Randomizer(0.75, 1);
var globalLight = new Color(brightnessRnd.floatValue);
var offsetRnd = new Randomizer(0.1, 0.75);
var offsetScale = offsetRnd.floatValue;

for (var i = 0; i < 10; ++i) {
	var pt = new Point(xRnd.intValue, yRnd.intValue);
	var r = radiusRnd.intValue;
	Sphere(pt, r, offsetScale);
}

function Rainbow() {
	var	grad = new Gradient();
	var colorNames = new Array("red", "orange", "yellow", "green", 
		"blue", "indigo", "violet"); // Roy G. Biv

	for (var i = 0; i < colorNames.length; ++i) {
		var c = new Color(colorNames[i]);
		var v = c.vary(0.1, 0.1, 0.1, 0.9);
		var t = i / (colorNames.length - 1);
		grad.addColorStop(v, t);
	}
	
	grad.start = new Point(0, 0);
	grad.end = new Point(db.width, 0);
	desktop.fillLayer(grad);
}

function Sphere(pt, r, offsetScale) {
	var c = new Color;
	c = c.darker(0.3);
	var radial = new Gradient(globalLight, c);
	var offset = r * offsetScale;
	
	// Put the global light as a highlight 
	radial.start = new Point(pt.x - offset, pt.y + offset);
	radial.end = new Point(pt.x - offset, pt.y + offset);
	radial.radius = new Point(5, r);
		
	desktop.fillStyle = radial;
	desktop.beginPath();
	desktop.circle(pt, r);
	desktop.fill();
}





