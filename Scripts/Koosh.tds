// Fill background
var c = new Array(new Color, new Color, new Color);
// Desaturate and brighten -- makes a pastel
for (i = 0; i < c.length; ++i) {
	c[i].saturation = 0.1;
	c[i].brightness = 0.9;
}
	
var g = new Gradient(c[0], c[1], c[2]);
desktop.fillLayer(g);

var db = desktop.bounds;
var xRnd = new Randomizer(0, db.width);
var yRnd = new Randomizer(0, db.height);
var radiusRnd = new Randomizer(100, db.height / 4);
var percentRnd = new Randomizer;
var variation = 0.2;
var layerCount = 3;
var count = (20 * compositor.screenCount) / layerCount;

// Create several layers for compositing.
for (var i = 0; i < layerCount; ++i) {
	var l = new Layer(db);
	l.fillLayer(new Color("white"));
	l.lineJoin = "round";
	l.lineCap = "round";
	
	// Draw a bunch of kooshes
	for (var x = 0; x < count; ++x) {
		var pt = new Point(xRnd.intValue, yRnd.intValue);
		var c = new Color;
		c.a = 0.5;
		l.lineWidth = 1 + percentRnd.floatValue * 4;
		Koosh(l, pt, radiusRnd.floatValue, c, variation);
	}
	
	// Add a blur to the layer, more blur to the background layers
	var f = new Filter("CIGaussianBlur");
	f.setKeyValue("inputRadius", 2 + 3 * (layerCount - i - 1));
	l.applyFilter(f);

	// Add it to the compositor with multiply so that the white disappears
	compositor.addLayer(l, "multiply");
}

function Koosh(layer, pt, r, c, variation) {
	// Create a Koosh
	var count = r;	
	var e = new Point;
	var angle = 2 * Math.PI / count;
	var displacer = new Randomizer(-50, 50);
	
	for (var i = 0; i < count; ++i) {
		e.x = pt.x + Math.cos(i * angle) * r + displacer.floatValue;
		e.y = pt.y + Math.sin(i * angle) * r + displacer.floatValue;
		
		l.beginPath();
		l.moveTo(pt);
		l.wavyLineTo(e, 0.9, displacer);
		l.strokeStyle = c.vary(variation, variation, variation, 0);
		l.stroke();
	}
}


