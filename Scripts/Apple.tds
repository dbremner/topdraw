// Blue menubar
menubar.fillLayer(new Color);

// Fill with desktop with black and a gray apple
var db = desktop.bounds;
desktop.fillLayer(new Color("black"));

DrawCenteredApple();

function DrawCenteredApple() {
	var apple = new Text("\uf8ff");
	apple.fontSize = db.height * 0.75;
	apple.foregroundColor = new Color(0.3, 0.8);
	var appleRect = apple.bounds;
	appleRect.x = (db.width - appleRect.width) / 2;
	appleRect.y = (db.height - appleRect.height) / 2 - 70;
	desktop.save();
	desktop.setShadow(new Point(0, -10), 25, new Color("white"));
	desktop.drawTextInRect(apple, appleRect);
	desktop.restore();
}

// Setup stroke and fill attributes
var blue = new Color(0, 0, 1, 0.5);
desktop.strokeColor = new Color(1, 1, 1, 0.5);  // translucent white
desktop.lineWidth = 5;

// Draw some rectangles
desktop.beginPath();

var count = 20;
var angle = 0;
var angleInc = Math.PI / (count - 1) * 2;
var rectColor = new Color;
rectColor.a = 0.5;
var rnd = new Randomizer(-1, 1);
var text = new Text("\uf8ff");
text.fontSize = 256;
var textRect = text.bounds;
var phase = Math.PI * rnd.floatValue;
var phaseInc = rnd.floatValue;
var yScale = (db.height - textRect.height) / 2;
var pt = new Point;

for (x = 0; x < count; ++x) {
	// Offset
	pt.x = x * (db.width / (count + 1));
	pt.y =  yScale * (1 + Math.sin(phase)/ 2);
	phase += phaseInc;
	cx = pt.x + (textRect.width / 2.0);
	cy = pt.y + (textRect.height / 2.0);

	// Save the graphics state, rotate
	desktop.save();
	desktop.translate(cx, cy);
	desktop.rotate(angle);
	desktop.translate(-cx, -cy);
	angle -= angleInc;

	// Vary the original color
	textRect.x = pt.x;
	textRect.y = pt.y;
	text.foregroundColor = rectColor.vary(0, 0.5, 0, 0.1);
	desktop.drawTextInRect(text, textRect);

	desktop.restore();
}


