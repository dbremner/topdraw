// Fill menubar
menubar.fillLayer(new Gradient(new Color("white"), new Color));

// Fill with desktop with black
desktop.fillLayer(new Color("black"));
var db = desktop.bounds;

// Create a layer with a frame and a rounded rectangle
var layerRect = new Rect(0, 0, db.width / 10, db.height / 10);
var layer = new Layer(layerRect);
var rnd = new Randomizer(0.1, 1);

// Randomize the line width
var w = 10 * rnd.floatValue;
layer.lineWidth = w;

// Create a rounded rect inside the layer and fill it with a gradient
layer.beginPath();
layer.roundedRect(layerRect, 15);
var color1 = new Color;
var color2 = new Color;
color1.a = color2.a = 0.1;
var grad = new Gradient(color1, color2);
grad.start = new Point(0, 0);
grad.end = new Point(layerRect.width, 0);
layer.fillStyle = grad;
layer.fill();

// Draw a circle in the layer
c = new Color;
c.a = 0.2;
layer.fillStyle = c;
c = new Color;
c.a = 0.5;
layer.strokeStyle = c;
var r = new Rect;
var xScale = layerRect.width / 4
var yScale = layerRect.height / 4;
var xRnd = new Randomizer(-xScale, xScale);
var yRnd = new Randomizer(-yScale, yScale);
r.x = xRnd.intValue;
r.y = yRnd.intValue;
xRnd = new Randomizer(5, layerRect.width);
yRnd = new Randomizer(5, layerRect.height);
r.width = xRnd.intValue;
r.height = yRnd.intValue;
layer.beginPath();
layer.ellipse(r);
layer.fillStroke();

// Create an image with that layer
var i = new Image(layer);

// Draw the image several times
var offset = 25 * compositor.screenCount;
var inc = offset * rnd.floatValue;
var xScale = 2 * offset * rnd.floatValue;
var yOffset = (db.height - r.height) * rnd.floatValue;
var pt = new Point;
var src = new Rect(r);
var adjustedSrc = 0;
for (x = offset * rnd.floatValue; x < (db.width - r.width); x += inc) {
	pt.x = x * 4;
	pt.y = yOffset + Math.sin(x / xScale) * x;
	desktop.drawImage(i, pt);
}


